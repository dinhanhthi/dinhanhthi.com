@use 'tailwindcss';
@plugin "@tailwindcss/typography";

@import 'katex/dist/katex.min.css';
@import 'prismjs/themes/prism-tomorrow.css';

@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *)); // use data-theme=dark to target dark mode

:root {
  --muted-color: var(--color-slate-500);
  --border-muted-color: var(--color-slate-200);
  --link-color: var(--color-sky-600);
  --link-hover-color: var(--color-pink-600);
}

[data-theme='dark'] {
  --muted-color: var(--color-slate-300);
  --border-muted-color: var(--color-slate-200);
  --link-color: var(--color-sky-400);
  --link-hover-color: var(--color-pink-400);
}

@theme inline {
  /* Colors */
  --color-muted: var(--muted-color);
  --color-border-muted: var(--border-muted-color);
  --color-link: var(--link-color);
  --color-link-hover: var(--link-hover-color);
}

@theme {
  /* Typography */
  --font-heading: Recoleta, Arial, Helvetica, sans-serif;
  --font-sans:
    var(--font-open-sans), ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
    'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  --font-mono:
    ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New',
    monospace;
  --font-quicksand:
    var(--font-quicksand), ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
    'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';

  /* Colors */
  --color-nav-dark-bg: #323541;
  --color-code-dark-bg: #343e4c;

  /* Background Images */
  --background-image-repeating-dots: -webkit-repeating-radial-gradient(
    center center,
    #777,
    #777 1px,
    transparent 0,
    transparent 100%
  );
  --background-image-wave: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 70 500 60' preserveAspectRatio='none'%3E%3Crect x='0' y='0' width='500' height='500' style='stroke: none; fill: %23ffffff;' /%3E%3Cpath d='M0,100 C150,200 350,0 500,100 L500,00 L0,0 Z' style='stroke: none; fill: %23323541;'%3E%3C/path%3E%3C/svg%3E");
  --background-image-wave-stone: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 70 500 60' preserveAspectRatio='none'%3E%3Crect x='0' y='0' width='500' height='500' style='stroke: none; fill: %23f6f6f6;' /%3E%3Cpath d='M0,100 C150,200 350,0 500,100 L500,00 L0,0 Z' style='stroke: none; fill: %23323541;'%3E%3C/path%3E%3C/svg%3E");
  --background-image-wave-footer: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 70 500 60' preserveAspectRatio='none'%3E%3Crect x='0' y='0' width='500' height='500' style='stroke: none; fill: %23323541;' /%3E%3Cpath d='M0,100 C150,200 350,0 500,100 L500,00 L0,0 Z' style='stroke: none; fill: %23ffffff;'%3E%3C/path%3E%3C/svg%3E");
  --background-image-wave-footer-stone: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 70 500 60' preserveAspectRatio='none'%3E%3Crect x='0' y='0' width='500' height='500' style='stroke: none; fill: %23323541;' /%3E%3Cpath d='M0,100 C150,200 350,0 500,100 L500,00 L0,0 Z' style='stroke: none; fill: %23f6f6f6;'%3E%3C/path%3E%3C/svg%3E");

  /* Animations */
  --animate-fadeIn: fadeIn 500ms;
  --animate-wave: wave 2s linear infinite;
  --animate-toTop: toTop 0.3s alternate ease infinite;

  /* Keyframes */
  @keyframes fadeIn {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes wave {
    0% {
      transform: rotate(0deg);
    }
    10% {
      transform: rotate(14deg);
    }
    20% {
      transform: rotate(-8deg);
    }
    30% {
      transform: rotate(14deg);
    }
    40% {
      transform: rotate(-4deg);
    }
    50% {
      transform: rotate(10deg);
    }
    60% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(0deg);
    }
  }

  @keyframes toTop {
    0% {
      transform: translate(0, 0);
    }
    100% {
      transform: translate(0, -3px);
    }
  }

  /* Spacing */
  --spacing-28: 7rem;

  /* Letter Spacing */
  --letter-spacing-tighter: -0.04em;

  /* Line Height */
  --line-height-tight: 1.2;

  /* Font Sizes */
  --font-size-5xl: 2.5rem;
  --font-size-6xl: 2.75rem;
  --font-size-7xl: 4.5rem;
  --font-size-8xl: 6.25rem;

  /* Box Shadow */
  --box-shadow-small: 0 5px 10px rgba(0, 0, 0, 0.12);
  --box-shadow-medium: 0 8px 30px rgba(0, 0, 0, 0.12);

  /* Border Radius */
  --radius: 0.5rem;
  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  /* Typography Plugin Colors */
  --color-prose-body: #4d4d4d;
}

@font-face {
  font-family: 'Recoleta';
  font-weight: 500;
  font-style: normal;
  src: url('./fonts/recoleta/Recoleta-Medium.eot');
  src:
    url('./fonts/recoleta/Recoleta-Medium.woff2') format('woff2'),
    url('./fonts/recoleta/Recoleta-Medium.woff') format('woff'),
    url('./fonts/recoleta/Recoleta-Medium.ttf') format('truetype');
  font-display: swap;
}

@font-face {
  font-family: 'Recoleta';
  src: url('./fonts/recoleta/Recoleta-SemiBold.eot');
  src:
    url('./fonts/recoleta/Recoleta-SemiBold.woff2') format('woff2'),
    url('./fonts/recoleta/Recoleta-SemiBold.woff') format('woff'),
    url('./fonts/recoleta/Recoleta-SemiBold.ttf') format('truetype');
  font-weight: 600;
  font-style: bold;
  font-display: swap;
}

@layer base {
  :root {
    --radius: 0.5rem;
  }

  html {
    font-family: 'font-sans';
    font-size: 16px;
  }

  strong,
  b {
    font-weight: 600 !important;
  }

  .m2it-scrollbar {
    &::-webkit-scrollbar {
      width: 10px;
      height: 10px;
    }
    &::-webkit-scrollbar-thumb {
      background: #ced4da;
      border-radius: 10px;
      &:hover {
        background: #adb5bd;
      }
    }
    &::-webkit-scrollbar-track {
      background: transparent;
    }

    &.m2it-scrollbar-small {
      &::-webkit-scrollbar {
        width: 7px;
        height: 7px;
      }
      &::-webkit-scrollbar-thumb {
        border-radius: 7px;
      }
    }
  }

  // Hide webkit search cancel button
  .m2it-hide-wscb {
    &::-webkit-search-cancel-button {
      -webkit-appearance: none;
      display: none;
    }
  }
}

@layer utilities {
  // Custom m2it-prose class that extends and customizes the base prose utility
  // Placed in @layer utilities to ensure it always comes after base prose styles
  .m2it-prose {
    @apply prose max-w-none leading-normal;

    :where(a):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      font-family: inherit;
      @apply text-[#015caa] no-underline hover:text-pink-600;
    }

    :where(h1, h2, h3, h4, h5, h6):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply my-0 font-semibold text-[#111];
      font-family: var(--font-quicksand), ui-sans-serif, system-ui, sans-serif !important;
      font-weight: 600 !important;
      opacity: 0.9;
    }

    :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      font-size: 1.55rem;
    }

    :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      font-size: 1.45rem;
    }

    :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      font-size: 1.35rem;
    }

    :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply my-0;
    }

    :where(blockquote):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      font-family: inherit;
      @apply my-3 py-3 text-inherit not-italic;
      border-top: 0 !important;
      border-bottom: 0 !important;
      border-right: 0 !important;
      border-left: 4px solid rgb(100 116 139) !important; /* slate-500 */
    }

    :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply rounded-md bg-gray-100 p-[1px_4px_2px_2px] font-mono text-[90%] font-normal break-words before:content-[''] after:content-[''];
    }

    :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply my-1.5;
    }

    :where(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply my-0;
    }

    :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply my-0;
    }

    :where(td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply px-[10px] py-[5px];
    }

    :where(hr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply my-6;
    }

    :where(figure):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin: 0.75rem 0;
    }

    :where(strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply font-medium text-[#111];
    }

    :where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply my-0;
    }

    // There is a strange problem where ul inside ol or ol inside ul:
    // normally, we should have ol > ul but rendered as ol > ol > ul
    // -1.625em is the opposite of the default margin-left of padding-inline-start of an ul/ol given
    // by prose class
    :where(ol > ol > ul):not(:where([class~='not-prose'], [class~='not-prose'] *)),
    :where(ul > ul > ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-left: -1.625em;
    }

    :where(ul, ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      & > *:not(ul):not(ol) {
        margin-top: 0.5rem !important;
        margin-bottom: 0.5rem !important;
      }
    }

    :where(ul > li::marker):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      font-size: 1rem;
    }
  }
}

@layer components {
  .m2it-link-hover {
    @apply text-pink-600;
  }

  .m2it-link {
    font-family: inherit;
    @apply text-[#015caa] no-underline hover:text-pink-600;
  }

  .thi-text-rainbow {
    @apply bg-gradient-to-r from-[#ff88c3] to-violet-400 bg-clip-text text-transparent;
  }
}

ol,
ul {
  ol > .button-indicator,
  ul > .button-indicator {
    display: none !important;
  }
}

code {
  .linenumber {
    font-size: 0.7rem;
  }
}

.table_block_column_header {
  tr:first-child {
    @apply bg-gray-100 font-semibold;
  }
}

.table_block_row_header {
  tr {
    td:first-child {
      @apply bg-gray-100 font-semibold;
    }
  }
}

// Notion background colors
.notion-gray_background {
  @apply bg-gray-100;
}

.notion-gray_background,
.bg-gray-100 {
  code {
    background-color: #e5e5e5;
  }

  .toggle-container {
    background-color: rgb(249 250 251); // bg-gray-50
  }

  .toggle-button {
    &.toggle-open,
    &:hover {
      background-color: rgb(229 231 235); // bg-gray-200
    }
  }
}

.notion-brown_background {
  @apply bg-[#f4eeee];
}

.notion-orange_background {
  @apply bg-orange-100;
}

.notion-yellow_background {
  @apply bg-amber-100;
}

.notion-teal_background {
  @apply bg-[#deffdb];
}

.notion-blue_background {
  @apply bg-sky-100;
}

.notion-purple_background {
  @apply bg-purple-100;
}

.notion-pink_background {
  @apply bg-pink-100;
}

.notion-red_background {
  @apply bg-red-100;
}

// Text
.notion-gray {
  @apply text-gray-500;
}

.notion-brown {
  @apply text-[#9f6b53];
}

.notion-orange {
  @apply text-orange-500;
}

.notion-yellow {
  @apply text-amber-500;
}

.notion-teal {
  @apply text-teal-600;
}

.notion-blue {
  @apply text-blue-500;
}

.notion-purple {
  @apply text-purple-500;
}

.notion-pink {
  @apply text-pink-500;
}

.notion-red {
  @apply text-red-500;
}

.notion-gray,
.notion-brown,
.notion-orange,
.notion-yellow,
.notion-teal,
.notion-blue,
.notion-purple,
.notion-pink,
.notion-red {
  strong {
    color: inherit;
  }
}

// List styling enhancements
ul > ul > li,
ol > ul > li {
  list-style-type: circle;
}

ul > ul > ul > li {
  list-style-type: square;
}

ol,
ul {
  & > {
    *:not(li):not(ol):not(ul):not(button.updated-block) {
      margin-left: -1.5rem !important;
    }
  }
}

ol > ol,
ul > ul {
  & > .toggle-container {
    margin-left: -1.7rem !important;
  }
}

.katex-display {
  margin: 0;

  .katex-html {
    white-space: normal;
    line-height: 1.5;
  }
}

// fix overflow auto numbering from \begin{equation}
.katex .vlist-t2 {
  margin-right: 0 !important;
}

li::marker {
  color: #444 !important;
}

ul > li {
  padding-left: 0 !important;
  &::marker {
    font-size: 1.25rem;
  }
}

.quote-children {
  & > * {
    margin-top: 0.75rem !important;
    &:not(:last-child) {
      margin-bottom: 0.75rem !important;
    }
    &:last-child {
      margin-bottom: 0 !important;
      & > *:last-child {
        margin-bottom: 0 !important;
        & > *:last-child {
          margin-bottom: 0 !important;
        }
      }
    }
  }
}

.notion-page-icon-inline {
  width: 26px;

  img {
    margin-top: 5px;
  }
}

.notion-page-icon-hero {
  flex-shrink: 0;
  width: 38px;
  height: 38px;
  font-size: 38px;
  line-height: 1;
  display: flex;
  align-items: center;
  justify-content: center;
}

// Copied from notion-nextjs-lib
.w-full > iframe {
  width: 100%;
  height: -webkit-fill-available;
}

.no-scrollbar::-webkit-scrollbar {
  display: none;
}

.notion-h-title {
  .katex {
    font-size: 105%;
  }
}

.katex {
  font-size: 115%;
}

.tooltip-auto {
  position: relative;

  &:not(&:hover) {
    z-index: 0;
  }

  &:hover {
    z-index: 1;
    &:before {
      opacity: 1;
    }
  }

  &:before {
    display: block;
    opacity: 0;
    pointer-events: none;
    position: absolute;
    background: #000;
    border-radius: 5px;
    color: #fff;
    content: attr(data-title);
    font-size: 0.85rem;
    padding: 2px 8px;
    line-height: 1.5;
    top: 120%;
    height: fit-content;
    white-space: break-spaces;
    width: max-content;
    max-width: 250px;
    letter-spacing: 0.5px;
    font-weight: normal;
  }

  &:not(._from-right):before {
    left: 5px;
  }

  &._from-right {
    &:before {
      left: auto;
      right: 5px;
    }
  }
}

.heading-container + .heading-container {
  margin-top: 1.25rem;
}

.notion-link {
  strong {
    color: rgb(1 92 170) !important;
  }
  &:hover {
    strong {
      color: rgb(219 39 119) !important;
    }
  }
}

pre > code::before {
  margin-left: -5px !important;
}

.post-card-wave {
  background: #fff;
  box-shadow:
    8px 14px 38px #272c310f,
    1px 3px 8px #272c3108;
  height: 100%;
  min-height: 8rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 1rem;
  border-radius: 12px;
  transition: all 0.3s ease-in-out;
  position: relative;
  overflow: hidden;
}

.circle-wave {
  position: relative;
  overflow: hidden;
}

.bottom-wave {
  position: absolute;
  bottom: -2px;
  width: 100%;

  .waves {
    position: relative;
    width: 100%;
    height: 5vh;
    margin-bottom: -7px; /*Fix for safari gap*/
    min-height: 60px;
    max-height: 150px;

    .parallax > use {
      animation: move-forever 25s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;
    }
    .parallax > use:nth-child(1) {
      animation-delay: -2s;
      animation-duration: 10s;
    }
    .parallax > use:nth-child(2) {
      animation-delay: -5s;
      animation-duration: 10s;
    }
    .parallax > use:nth-child(3) {
      animation-delay: -7s;
      animation-duration: 10s;
    }
    .parallax > use:nth-child(4) {
      animation-delay: -1s;
      animation-duration: 10s;
    }
  }
}

@keyframes move-forever {
  0% {
    transform: translate3d(-90px, 0, 0);
  }
  100% {
    transform: translate3d(85px, 0, 0);
  }
}

.toggle-heading-content-container {
  & > * {
    &:last-child {
      margin-bottom: 0;
    }
  }

  li:last-of-type {
    margin-bottom: 0;
  }
}

.inside-toggle-container {
  .block-column-list {
    margin: -0.75rem 0 !important;
  }
}
